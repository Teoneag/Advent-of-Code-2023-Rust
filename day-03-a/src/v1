fn main() {
    let input = include_str!("../input.txt");
    let matrix: Vec<Vec<char>> = input.lines().map(|line| line.chars().collect()).collect();

    // println!("{:?}", matrix);

    let n = matrix.len() as i32;
    let m = matrix[0].len() as i32;

    let mut sum = 0;

    for (i, line) in matrix.iter().enumerate() {
        let mut nr = 0;
        let mut j_start = 0;

        for (j, c) in line.iter().enumerate() {
            let i1 = i as i32;
            let j1 = j as i32;
            if c.is_digit(10) {
                if nr == 0 {
                    j_start = j1;
                }
                nr = nr * 10 + c.to_digit(10).unwrap();
                if j != line.len() - 1 {
                    continue;
                }
            }
            if nr != 0 {
                // print!("{}: ", nr);
                let mut indices = vec![(i1, j_start - 1), (i1, j1)];

                for k in j_start - 1..j1 + 1 {
                    indices.push((i1 - 1, k));
                    indices.push((i1 + 1, k));
                }

                indices = indices
                    .into_iter()
                    .filter(|(i, j)| *i >= 0 && *j >= 0 && *i < n && *j < m)
                    .collect();

                let mut ok = false;

                for (i, j) in indices {
                    // print!("({}, {}, {}; ) ", i, j, matrix[i as usize][j as usize]);
                    if {
                        let x = matrix[i as usize][j as usize];
                        !x.is_digit(10) && x != '.'
                    } {
                        ok = true;
                        break;
                    }
                }
                // println!();

                if ok {
                    // println!("{}", nr);
                    sum += nr;
                }

                nr = 0;
            }
        }
    }
    println!("{}", sum); // nu: 539590 - too low
}
